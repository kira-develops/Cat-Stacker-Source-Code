export default class Timer {
    constructor(gameState, seconds, x, y, width, height, fontColor = '#ffffff', halign = 'right', fontSize = undefined) {
        _.bindAll(this, '_tick');

        this._signals = {
            tick: new Phaser.Signal(),
            expire: new Phaser.Signal(),
        };

        this._seconds = seconds;

        this._text = gameState.add.text(0, 0, this.formatTime(), {
            boundsAlignH: halign,
            fill: fontColor,
            fontSize,
        });
        this._text.setTextBounds(x, y, width, height);
    }

    formatTime() {
        const minutes = Math.floor(this._seconds / 60);
        let seconds = this._seconds % 60;
        if (seconds < 10) {
            seconds = `0${seconds}`;
        }
        return `${minutes}:${seconds}`;
    }

    start() {
        this._interval = setInterval(this._tick, 1000);
    }

    stop() {
        clearInterval(this._interval);
    }

    get secondsRemaining() {
        return this._seconds;
    }

    get tick() {
        return this._signals.tick;
    }

    get expire() {
        return this._signals.expire;
    }

    _tick() {
        --this._seconds;
        this._text.text = this.formatTime();
        this._signals.tick.dispatch(this._seconds);

        if (this._seconds === 0) {
            this._signals.expire.dispatch();
            clearInterval(this._interval);
        }
    }
}



//////////////////
// WEBPACK FOOTER
// ./node_modules/@cainc/game-common/src/js/components/Timer.js
// module id = 339
// module chunks = 0