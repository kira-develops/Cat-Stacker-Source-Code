import HelpDialog from './HelpDialog.js';
import {
    gameBridge
} from '../util/GameBridge.js';

export default class StartButton {
    /**
     * @param  {State} gameState                  the current state - used as a parent for the button
     * @param  {number} x                         left coordinate of the button
     * @param  {number} y                         top coordinate of the button
     * @param  {AssetOptions} asset               see typedef in StartButton
     * @param  {?array} helpScreens               array of data that is consumed by HelpDialog
     * @param  {String} [nextState='Game']        state name to start after the help screens have been presented
     * @param  {object} [nextStateData=undefined] data to pass to the next state
     */
    constructor(gameState, x, y, asset, helpScreens, nextState = 'Game', nextStateData = undefined) {
        this._button = gameState.add.button(x, y, asset.atlas, () => {
            gameBridge.start();
            if (helpScreens) {
                new HelpDialog(gameState, () => {
                    gameState.state.start(nextState, true, false, nextStateData);
                }, helpScreens, asset.upSound);
            } else {
                gameState.state.start(nextState, true, false, nextStateData);
            }
        }, null, asset.over, asset.out, asset.down, asset.up);
        this._button.setUpSound(asset.upSound);
    }

    get button() {
        return this._button;
    }
}

/**
 * An object with properties for the texture atlas name to use, and various states/frames within it.
 * Note that the `atlas` and `out` keys are required.
 * See the Phaser button docs here: https://phaser.io/docs/2.6.2/Phaser.Button.html
 * @typedef {Object} AssetOptions
 * @property {!string} atlas - The atlas id to take the assets from.
 * @property {string=} over - frame name for the 'over' state.
 * @property {!string} out - frame name for the 'out' state.
 * @property {string=} down - frame name for the 'down' state.
 * @property {string=} up - frame name for the 'up' state.
 * @property {string=} offOver - frame name for a toggleButton 'off over' state.
 * @property {string=} offOut - frame name for a toggleButton 'off out' state.
 * @property {string=} offDown - frame name for a toggleButton 'off down' state.
 * @property {string=} offUp - frame name for a toggleButton 'off up' state.
 * @property {Sound=} upSound - Phaser.Sound to play when the user taps the button.
 */



//////////////////
// WEBPACK FOOTER
// ./node_modules/@cainc/game-common/src/js/components/StartButton.js
// module id = 338
// module chunks = 0